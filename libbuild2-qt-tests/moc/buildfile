# @@ TODO Test generated headers

qt.version = $config.libbuild2_qt_tests.qt

using qt.moc

if ($qt.version == 5)
  import libs = libQt5Core%lib{Qt5Core}
else
  import libs = libQt6Core%lib{Qt6Core}

# Headers, source files.
#
exe{driver}: cxx{driver} hxx{source} {hxx cxx}{sink}

# C++ source files generated by moc.
#
# cxx{*} are generated from hxx{} and are compiled (by convention).
#
# moc{*} are generated from cxx{} and are included.
#
exe{driver}: cxx{moc_source}                # Compiled.
exe{driver}: cxx{sink_moc}: include = adhoc # Included (breaks convention).
exe{driver}: moc{sink}                      # Included.

# Libraries.
#
exe{driver}: $libs

# Generate:
#
# moc_source.cxx from source.hxx
# sink_moc.cxx   from sink.hxx (note: unconventional output filename)
# sinc.moc       from sink.cxx
#
# Use a rule hint for cxx{sink_moc} because it breaks the moc naming
# conventions (cxx{moc_foo} from hxx{foo}).
#
cxx{moc_source}:                    hxx{source}
[rule_hint=qt.moc] cxx{sink_moc}:   hxx{sink}
moc{sink}:                          cxx{sink}

cxx.poptions += "-I$out_root" "-I$src_root" \
                "-I$out_base" "-I$src_base"
